name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'  # Runs every Sunday at midnight

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable, beta]
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, armv7-unknown-linux-gnueabihf, x86_64-apple-darwin, x86_64-pc-windows-msvc]

    steps:
    - uses: actions/checkout@v4

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.target }}-${{ matrix.rust }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-${{ matrix.target }}-${{ matrix.rust }}

    - name: Install Rust toolchain
      run: rustup install ${{ matrix.rust }}

    - name: Add cross-compilation targets
      run: rustup target add ${{ matrix.target }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Lint with Clippy
      run: cargo clippy --all-targets -- -D warnings

    - name: Build
      run: cargo build --verbose --target ${{ matrix.target }}

    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: my-binary-${{ matrix.target }}-${{ matrix.rust }}
        path: target/${{ matrix.target }}/debug/

  security-audit:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      run: rustup install stable

    - name: Security audit
      run: cargo install cargo-audit && cargo audit

  unused-dependencies:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v4

    - name: Install nightly toolchain and udeps
      run: |
        rustup install nightly
        rustup component add rustc-dev llvm-tools-preview --toolchain nightly
        cargo +nightly install cargo-udeps

    - name: Check for unused dependencies
      run: cargo +nightly udeps --all-targets
